name: Build RPM, DEB, and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create_source_tarball:
    runs-on: ubuntu-latest

    steps:
    - name: Download builder script
      run: |
        wget https://raw.githubusercontent.com/EvgeniyPatlan/sorting-library/refs/heads/main/packaging/script/builder.sh -O builder.sh
    - name: Upload builder script
      uses: actions/upload-artifact@v4
      with:
        name: builder-script
        path: builder.sh
     
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Download builder script
      uses: actions/download-artifact@v4
      with:
        name: builder-script

    - name: Create Source Tarball
      run: |
        mkdir -p /tmp/SORTING_LIB
        chmod +x builder.sh
                ./builder.sh --builddir=/tmp/SORTING_LIB --get_sources=1

    - name: Upload Source Tarball
      uses: actions/upload-artifact@v4
      with:
        name: sorting-library-source-tarball
        path: /tmp/SORTING_LIB/source_tarball/*.tar.gz

  create_source_rpm:
    needs: create_source_tarball
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker
      run: |
        sudo apt-get update
        curl -fsSL https://get.docker.com | sh --allow-change-held-packages --allow-downgrades
    - name: Download Source Tarball
      uses: actions/download-artifact@v4
      with:
        name: sorting-library-source-tarball

    - name: Move Source Tarball to source_tarball directory
      run: |
        mkdir -p source_tarball
        mv *.tar.gz source_tarball/

    - name: Download builder script
      run: |
        wget https://raw.githubusercontent.com/EvgeniyPatlan/sorting-library/refs/heads/main/packaging/script/builder.sh -O builder.sh

    - name: Build Source RPM in Docker
      run: |
        chmod +x builder.sh
                docker run --rm -v $GITHUB_WORKSPACE:/workspace -w /workspace/source_tarball oraclelinux:8 bash -c "yum install -y rpm-build &&
          chmod +x /workspace/builder.sh &&
          /workspace/builder.sh --builddir=/workspace/srpm --build_src_rpm=1"

    - name: Upload Source RPM
      uses: actions/upload-artifact@v4
      with:
        name: sorting-library-source-rpm
        path: "/workspace/srpm/*.src.rpm"
    - name: Download Source Tarball
      uses: actions/download-artifact@v4
      with:
        name: sorting-library-source-tarball

    - name: Move Source Tarball to source_tarball directory
      run: |
        mkdir -p source_tarball
        mv *.tar.gz source_tarball/

    - name: Download builder script
      uses: actions/download-artifact@v4
      with:
        name: builder-script
    - name: Install build dependencies
      run: |
        chmod +x $GITHUB_WORKSPACE/builder.sh
        mkdir -p /tmp/SORTING_LIB
        sudo $GITHUB_WORKSPACE/builder.sh --builddir=/tmp/SORTING_LIB --install_deps=1

    - name: Create Source RPM
      run: |
        mkdir -p /tmp/SORTING_LIB
        ./builder.sh --builddir=/tmp/SORTING_LIB --build_src_rpm=1

    - name: Upload Source RPM
      uses: actions/upload-artifact@v4
      with:
        name: sorting-library-source-rpm
        path: "srpm/*.src.rpm"

  create_source_deb:
    needs: create_source_tarball
    runs-on: ubuntu-22.04

    steps:
    - name: Download Source Tarball
      uses: actions/download-artifact@v4
      with:
        name: sorting-library-source-tarball

    - name: Move Source Tarball to source_tarball directory
      run: |
        mkdir -p source_tarball
        mv *.tar.gz source_tarball/

    - name: Download builder script
      uses: actions/download-artifact@v4
      with:
        name: builder-script
    - name: Install build dependencies
      run: |
        chmod +x $GITHUB_WORKSPACE/builder.sh
        mkdir -p /tmp/SORTING_LIB
        sudo $GITHUB_WORKSPACE/builder.sh --builddir=/tmp/SORTING_LIB --install_deps=1

    - name: Create Source DEB
      run: |
        mkdir -p /tmp/SORTING_LIB
        ./builder.sh --builddir=/tmp/SORTING_LIB --build_source_deb=1

    - name: Compress Source DEB Files
      run: |
        tar -czvf source_deb_files.tar.gz -C source_deb .
    - name: Upload Source DEB Files
      uses: actions/upload-artifact@v4
      with:
        name: sorting-library-source-deb
        path: source_deb_files.tar.gz

  build_rpm:
    needs: create_source_rpm
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker
      run: |
        sudo apt-get update
        curl -fsSL https://get.docker.com | sh

        
  build_deb:
    needs: create_source_deb
    runs-on: ubuntu-24.04

    steps:
    - name: Create DEB directory
      run: mkdir -p deb

    - name: Download Source DEB
      uses: actions/download-artifact@v4
      with:
        name: sorting-library-source-deb

    - name: Extract Source DEB Files
      run: |
        mkdir -p source_deb
        tar -xzvf source_deb_files.tar.gz -C source_deb

    - name: Download builder script
      uses: actions/download-artifact@v4
      with:
        name: builder-script
    - name: Install build dependencies
      run: |
          chmod +x $GITHUB_WORKSPACE/builder.sh
          mkdir -p /tmp/SORTING_LIB
          sudo $GITHUB_WORKSPACE/builder.sh --builddir=/tmp/SORTING_LIB --install_deps=1

    - name: Build DEB
      run: |
        mkdir -p /tmp/SORTING_LIB
        chmod +x $GITHUB_WORKSPACE/builder.sh
        sudo ./builder.sh --builddir=/tmp/SORTING_LIB --build_deb=1 && sudo mv /tmp/SORTING_LIB/deb/*.deb deb/

    - name: Upload DEB Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sorting-library-deb
        path: "deb/*.deb"

  build_docker:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker
      run: |
        sudo apt-get update
        sudo apt-get update
        sudo apt-get remove -y containerd docker.io
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: |
        cd packaging/docker
        docker build -t sorting-library .

    - name: Save Docker Image as File
      run: |
        docker save sorting-library -o sorting-library.tar

    - name: Upload Docker Image
      uses: actions/upload-artifact@v4
      with:
        name: sorting-library-docker
        path: sorting-library.tar

  scan_docker:
    needs: build_docker
    runs-on: ubuntu-latest

    steps:
    - name: Download Docker Image
      uses: actions/download-artifact@v4
      with:
        name: sorting-library-docker

    - name: Load Docker Image
      run: |
        docker load -i sorting-library.tar

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Scan Docker Image for CVEs
      run: |
        trivy image --skip-update sorting-library